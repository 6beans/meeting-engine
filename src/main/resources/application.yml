spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:postgres}/engine
    username: engine
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
  profiles:
    active: ${PROFILE:default}
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/login/oauth2/code/github"
            scope:
              - read:user
              - user:email
        #          vk:
        #            clientId: ${VK_CLIENT_ID}
        #            clientSecret: ${VK_CLIENT_SECRET}
        #            scope:
        #              - openid
        #              - email
        #            redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
        #            clientName: VK
        provider:
          google:
            issuerUri: https://accounts.google.com
          github:
            authorizationUri: https://github.com/login/oauth/authorize
            tokenUri: https://github.com/login/oauth/access_token
            userInfoUri: https://api.github.com/user
            userNameAttribute: id
#          vk:
#            authorizationUri: https://oauth.vk.com/authorize
#            tokenUri: https://oauth.vk.com/access_token
#            userInfoUri: https://api.vk.com/method/users.get
#            userNameAttribute: id